#!/bin/bash

# ============================================================================
#  .bashrc - Bash configuration file
#
#  This file is sourced for interactive non-login shells.
#  For login shells, .bash_profile is used, which typically sources this file.
# ============================================================================

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# ============================================================================
#  1. Environment Variables
# ============================================================================

# Set default editor (uncomment and modify if needed)
# export EDITOR=vim
# export VISUAL=vim

# Set GPG TTY for GPG operations
export GPG_TTY=$(tty)

# NVM (Node Version Manager) setup
export NVM_DIR="$HOME/.nvm"

# ============================================================================
#  2. Shell Options
# ============================================================================

# Uncomment to enable case-insensitive globbing
# shopt -s nocaseglob

# Append to history file instead of overwriting
shopt -s histappend

# ============================================================================
#  3. Path Modifications
# ============================================================================

# Add console-ninja to PATH
PATH=~/.console-ninja/.bin:$PATH

# ============================================================================
#  4. Source External Configurations
# ============================================================================

# Source global definitions
if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi

# Source local bash settings if they exist
if [ -f ~/.bash_local ]; then
    source ~/.bash_local
fi

# Source common shell configuration
if [ -f "$HOME/.shell_common" ]; then
    source "$HOME/.shell_common"
fi

# Load NVM if available
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Git prompt and completion for bash shell
## Source git prompt and completion scripts if available (Etsy machines).
## Otherwise define a simple git prompt function.
if [ -f /etc/bash_gitprompt && -f /etc/bash_completion ]; then
    source /etc/bash_gitprompt
    export PROMPT_COMMAND=prompt_func
    source /etc/bash_completion
else
    # Color definitions
    RED="\[\033[0;31m\]"
    YELLOW="\[\033[0;33m\]"
    GREEN="\[\033[0;32m\]"
    BLUE="\[\033[0;34m\]"
    COLOR_NONE="\[\e[0m\]"

    # Git prompt info
    function git_prompt_info() {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || \
    ref=$(git rev-parse --short HEAD 2> /dev/null) || return
    echo " (${ref#refs/heads/})$(parse_git_dirty)"
    }

    # Check for dirty git state
    function parse_git_dirty() {
    local STATUS_OUTPUT=$(git status --porcelain 2> /dev/null)
    if [[ -n ${STATUS_OUTPUT} ]]; then
        echo " x"
    fi
    }

    # Main prompt function
    function prompt_func() {
        previous_return_value=$?;
        prompt="${BLUE}[${RED}\W${GREEN}$(git_prompt_info)${BLUE}]${COLOR_NONE}"
        if test $previous_return_value -eq 0
        then
            PS1="${prompt}> "
        else
            PS1="${prompt}${RED}>${COLOR_NONE} "
        fi
    }

    PROMPT_COMMAND=prompt_func
fi
