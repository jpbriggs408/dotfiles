# =============================================================================
#  ZSH Configuration File
# =============================================================================

# Features and Plugins
# -----------------------------------------------------------------------------

# Install Homebrew if not present
if ! command -v brew &> /dev/null; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

if [[ -f "/opt/homebrew/bin/brew" ]] then
    if [[ $(uname) == "Darwin" ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    fi
    # Check if OSNAME is linux-gnu
    if [[ $OSNAME == "linux-gnu" ]]; then
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    fi
fi

# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

# Add in snippets
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::archlinux
zinit snippet OMZP::aws
zinit snippet OMZP::kubectl
zinit snippet OMZP::kubectx
zinit snippet OMZP::command-not-found
zinit snippet OMZP::z
zinit snippet OMZP::colored-man-pages

autoload -Uz compinit && compinit

zinit cdreplay -q

# User Configuration
# -----------------------------------------------------------------------------

# Install oh-my-posh (prompt theme engine) if not present
if ! command -v oh-my-posh &> /dev/null; then
    brew install jandedobbeleer/oh-my-posh/oh-my-posh
fi

# Initialize oh-my-posh
eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/omp.toml)"


# Google Cloud SDK
if [ -f '/Users/jbriggs/y/google-cloud-sdk/path.zsh.inc' ]; then
    source '/Users/jbriggs/y/google-cloud-sdk/path.zsh.inc'
fi
if [ -f '/Users/jbriggs/y/google-cloud-sdk/completion.zsh.inc' ]; then
    source '/Users/jbriggs/y/google-cloud-sdk/completion.zsh.inc'
fi

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Shared Aliases and Functions
# -----------------------------------------------------------------------------
# Source a shared configuration file for both bash and zsh
if [ -f "$HOME/.shell_common" ]; then
    source "$HOME/.shell_common"
fi

# ZSH-Specific Aliases and Functions
# -----------------------------------------------------------------------------
alias zshrc='${=EDITOR} ${ZDOTDIR:-$HOME}/.zshrc'

# Suffix aliases
autoload -Uz is-at-least
if is-at-least 4.2.0; then
    # open browser on urls
    if [[ -n "$BROWSER" ]]; then
        _browser_fts=(htm html de org net com at cx nl se dk)
        for ft in $_browser_fts; do alias -s $ft=$BROWSER; done
    fi

    _editor_fts=(cpp cxx cc c hh h inl asc txt TXT tex)
    for ft in $_editor_fts; do alias -s $ft=$EDITOR; done

    if [[ -n "$XIVIEWER" ]]; then
        _image_fts=(jpg jpeg png gif mng tiff tif xpm)
        for ft in $_image_fts; do alias -s $ft=$XIVIEWER; done
    fi

    _media_fts=(ape avi flv m4a mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
    for ft in $_media_fts; do alias -s $ft=mplayer; done

    #read documents
    alias -s pdf=acroread
    alias -s ps=gv
    alias -s dvi=xdvi
    alias -s chm=xchm
    alias -s djvu=djview

    #list whats inside packed file
    alias -s zip="unzip -l"
    alias -s rar="unrar l"
    alias -s tar="tar tf"
    alias -s tar.gz="echo "
    alias -s ace="unace l"

    # ----- 5.9 Global Aliases -----
    alias -g H='| head'
    alias -g T='| tail'
    alias -g G='| grep'
    alias -g L="| less"
    alias -g M="| most"
    alias -g LL="2>&1 | less"
    alias -g CA="2>&1 | cat -A"
    alias -g NE="2> /dev/null"
    alias -g NUL="> /dev/null 2>&1"
fi

# ZSH completion for SSH hosts
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# Shell Integrations
# -----------------------------------------------------------------------------
# install fzf and zoxide if not present
if ! command -v fzf &> /dev/null; then
    brew install fzf
fi
if ! command -v zoxide &> /dev/null; then
    brew install zoxide
fi

# load fzf and zoxide
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
